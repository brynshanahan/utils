{"version":3,"sources":["object/run-inherited-method.ts"],"names":[],"mappings":";;;;;AAAA;;;;AAGA,SAAgB,kBAAhB,CACE,QADF,EAEE,GAFF,EAEQ;AACN,MAAA,IAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,SAAA,CAAA,QAAA,EAAA,IAAmE;AAAnE,IAAA,IAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAEA,MAAM,KAAK,GAAG,MAAM,CAAC,cAAP,CAAsB,MAAM,CAAC,cAAP,CAAsB,QAAtB,CAAtB,CAAd;AACA,SAAO,KAAK,CAAC,GAAD,CAAL,CAAW,KAAX,CAAiB,QAAjB,EAA2B,IAA3B,CAAP;AACD;;AAPD,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AASA,SAAgB,kBAAhB,CACE,QADF,EAEE,GAFF,EAEQ;AAEN,MAAM,KAAK,GAAG,MAAM,CAAC,cAAP,CAAsB,MAAM,CAAC,cAAP,CAAsB,QAAtB,CAAtB,CAAd;AACA,SAAO,OAAO,KAAK,CAAC,GAAD,CAAZ,KAAsB,UAAtB,GAAmC,KAAK,CAAC,GAAD,CAAxC,GAAgD,SAAvD;AACD;;AAND,OAAA,CAAA,kBAAA,GAAA,kBAAA;;AAQA,SAAgB,cAAhB,CACE,GADF,EAEE,GAFF,EAGE,OAHF,EAGc;AAGZ;AAFA,MAAA,IAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,SAAA,CAAA,QAAA,EAAA,IAAa;AAAb,IAAA,IAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAIA,MAAI,OAAO,GAAG,CACZ,OAAO,GAAP,KAAe,UAAf,GAA4B,GAAG,CAAC,KAAJ,CAAU,OAAV,EAAmB,IAAnB,CAA5B,GAAuD,SAD3C,EAEZ,OAAO,GAAP,KAAe,UAAf,IAA6B,GAAG,KAAK,GAArC,GACI,GAAG,CAAC,KAAJ,CAAU,OAAV,EAAmB,IAAnB,CADJ,GAEI,SAJQ,CAAd;AAOA,SAAO,OAAP;AAID;;AAnBD,OAAA,CAAA,cAAA,GAAA,cAAA","file":"run-inherited-method.js","sourceRoot":"../src","sourcesContent":["/* \nShortcut around calling `super.method()` inside client code\n*/\nexport function runInheritedMethod<T extends {}, K extends keyof T>(\n  instance: T,\n  key: K,\n  ...args: T[K] extends (...args: any) => any ? Parameters<T[K]> : []\n) {\n  const proto = Object.getPrototypeOf(Object.getPrototypeOf(instance))\n  return proto[key].apply(instance, args)\n}\n\nexport function getInheritedMethod<T extends {}, K extends keyof T, V = T[K]>(\n  instance: T,\n  key: K\n) {\n  const proto = Object.getPrototypeOf(Object.getPrototypeOf(instance))\n  return typeof proto[key] === 'function' ? proto[key] : undefined\n}\n\nexport function runIfDifferent<Args extends []>(\n  fnA: (...args: Args) => any | undefined,\n  fnB: (...args: Args) => any | undefined,\n  thisArg: any,\n  ...args: Args\n) {\n  // console.log(fnA, '->', fnB, fnA === fnB)\n\n  let results = [\n    typeof fnA === 'function' ? fnA.apply(thisArg, args) : undefined,\n    typeof fnB === 'function' && fnA !== fnB\n      ? fnB.apply(thisArg, args)\n      : undefined\n  ]\n\n  return results as [\n    ReturnType<typeof fnA> | undefined,\n    ReturnType<typeof fnB> | undefined\n  ]\n}\n"]}