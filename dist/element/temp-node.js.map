{"version":3,"sources":["element/temp-node.ts"],"names":[],"mappings":"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","file":"temp-node.js","sourceRoot":"../src","sourcesContent":["/* Doesn't affect the real dom when being appended to */\ntype Nodey = Element\n\nexport default class TempNode {\n  children: Set<Element>\n  element: Nodey\n\n  constructor(element: Nodey) {\n    this.children = new Set([...element.children])\n    this.element = element\n\n    for (let prop in element) {\n      if (typeof this[prop] === 'undefined') {\n        Object.defineProperty(this, prop, {\n          get() {\n            return element[prop]\n          },\n          set(value) {\n            return (element[prop] = value)\n          }\n        })\n      }\n    }\n  }\n\n  get innerHTML() {\n    let result = ''\n    for (let child of this.children) {\n      result += child.innerHTML\n    }\n    return result\n  }\n\n  get textContent() {\n    let result = ''\n    for (let child of this.children) {\n      result += child.textContent\n    }\n    return result\n  }\n\n  querySelector(query: string) {\n    for (let child of this.children) {\n      let result = child.querySelector(query)\n      if (result) return result\n    }\n    return null\n  }\n\n  querySelectorAll(query: string) {\n    const children = []\n    for (let child of this.children) {\n      children.push(...child.querySelectorAll(query))\n    }\n    return children\n  }\n\n  appendChild(node: Element) {\n    this.children.add(node)\n  }\n\n  append(node: Element) {\n    this.children.add(node)\n  }\n\n  appendTo(node: Element) {\n    for (let child of this.children) {\n      this.element.appendChild(child)\n    }\n    node.appendChild(this.element)\n  }\n}\n"]}