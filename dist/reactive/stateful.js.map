{"version":3,"sources":["reactive/subject.ts","reactive/stateful.ts"],"names":[],"mappings":"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","file":"stateful.js","sourceRoot":"../src","sourcesContent":["// const Symbol = str => str + '_' + (Math.random() * 10).toFixed(3)\nconst subject = Symbol('subject')\n\ntype Callback<Args extends [] = any[], Result = any> = (...args: Args) => Result\n\ntype SubjectProperties<Types> = {\n  index: number\n  listeners: {\n    [k in keyof Types]: {\n      [l: string]: Callback<Types[k]>\n    }\n  }\n  cancels: {\n    [k: string]: Callback\n  }\n  key: () => string\n}\n\ntype GetElementType<T extends Array<any>> = T extends (infer U)[] ? U : never\n\nexport default class Subject<EventTypes = { [key: string]: Array<any> }> {\n  [subject]: SubjectProperties<EventTypes>\n\n  constructor() {\n    this[subject] = {\n      index: 0,\n      listeners: {},\n      cancels: {},\n      key() {\n        return `listener_${this[subject].index++}`\n      },\n    } as SubjectProperties<EventTypes>\n\n    // Bind all the methods\n    this.on = this.on.bind(this)\n    this[subject].key = this[subject].key.bind(this)\n    this.emit = this.emit.bind(this)\n    this.once = this.once.bind(this)\n    this.destroy = this.destroy.bind(this)\n  }\n\n  /* Listen to  */\n  on<Key extends keyof EventTypes>(\n    nameOrCallback: Key | Callback,\n    fn?: Callback<EventTypes[Key]>\n  ) {\n    let name = nameOrCallback as keyof EventTypes\n    let callback = fn as Callback | Callback<EventTypes[Key]>\n    if (!fn && typeof nameOrCallback === 'function') {\n      callback = nameOrCallback as Callback\n      /* Listen to all events */\n      name = (subject as unknown) as keyof EventTypes\n    }\n\n    // Every event listener is given it's own key\n    const key = this[subject].key()\n\n    const eventNames =\n      typeof name === 'string'\n        ? (name.split(' ') as (keyof EventTypes)[])\n        : [name]\n\n    for (const eventName of eventNames) {\n      // If this is the first listener of type eventName then listeners[eventName] will be empty\n      if (!this[subject].listeners[eventName])\n        this[subject].listeners[eventName] = {}\n\n      // Add the listener to the listener object\n      this[subject].listeners[eventName][key] = callback\n    }\n\n    // Cancel function deletes the listener and itself from Subject\n    let cancelled = false\n    let cancels = () => {\n      if (cancelled) return\n      cancels = () => {}\n      cancelled = true\n\n      for (const eventName of eventNames) {\n        delete this[subject].listeners[eventName][key]\n        delete this[subject].cancels[key]\n\n        if (!Object.keys(this[subject].listeners[eventName]).length) {\n          delete this[subject].listeners[eventName]\n        }\n      }\n    }\n\n    // Add cancel to the subject array\n    this[subject].cancels[key] = cancels\n\n    // Return the event diposer\n    return cancels\n  }\n\n  emit<T extends keyof EventTypes>(name: T, ...args: EventTypes[T]) {\n    // @ts-ignore\n    if (name !== subject) {\n      // @ts-ignore\n      this.emit(subject, ...args)\n    }\n    // If this even is in the listeners object\n    if (this[subject].listeners[name]) {\n      return Object.values(this[subject].listeners[name]).map((fn) =>\n        fn(...args)\n      )\n    }\n  }\n\n  getHandlers<T extends keyof EventTypes>(name: T) {\n    return {\n      get: () => {\n        const handlers: Callback<EventTypes[T]>[] = []\n        for (const key in this[subject].listeners[name]) {\n          handlers.push(this[subject].listeners[name][key])\n        }\n        return handlers\n      },\n      map: (fn: Callback<[Callback<EventTypes[T]>, string?]>) => {\n        const results = []\n        for (const key in this[subject].listeners[name]) {\n          const handler = this[subject].listeners[name][key]\n          results.push(fn(handler, key))\n        }\n        return results\n      },\n      forEach: (fn: Callback<[Callback<EventTypes[T]>, string?]>) => {\n        for (const key in this[subject].listeners[name]) {\n          const handler = this[subject].listeners[name][key]\n          fn(handler, key)\n        }\n      },\n      reduce: (\n        fn: Callback<[EventTypes[T][0], Callback<EventTypes[T]>, string?]>,\n        val?: EventTypes[T][0]\n      ) => {\n        let prev = val\n        for (const key in this[subject].listeners[name]) {\n          const handler = this[subject].listeners[name][key]\n          prev = fn(prev, handler, key)\n        }\n      },\n    }\n  }\n\n  reduce<T extends keyof EventTypes>(\n    name: T,\n    ...args: EventTypes[T]\n  ): EventTypes[T][0] {\n    const [value, ...rest] = args\n    let prev\n    if (this[subject].listeners[name]) {\n      return this.getHandlers(name).reduce((memo, fn) => {\n        const v = fn(memo, ...rest)\n        if (typeof v !== 'undefined') {\n          prev = v\n          return v\n        } else {\n          return prev\n        }\n      }, value)\n    }\n\n    return value\n  }\n\n  async asyncReduce<T extends keyof EventTypes>(\n    name: T,\n    ...args: EventTypes[T]\n  ): EventTypes[T][0] {\n    const [value, ...rest] = args\n    let prev\n    if (this[subject].listeners[name]) {\n      return Object.values(this[subject].listeners[name]).reduce((last, fn) => {\n        const v = fn(last, ...rest)\n        if (typeof v !== 'undefined') {\n          last = v\n          return v\n        }\n        return last\n      }, value)\n    }\n\n    return value\n  }\n\n  add<T extends keyof EventTypes>(eventName: T, fn: Callback<EventTypes[T]>) {\n    return this.on(eventName, fn)\n  }\n\n  once<T extends keyof EventTypes>(name: T, fn: Callback<EventTypes[T]>) {\n    // Use var to hoist variable (not sure if needed)\n    var cancel = this.on(name, (...args) => {\n      if (cancel) cancel()\n      fn(...args)\n    })\n  }\n\n  destroy() {\n    Object.values(this[subject].cancels).forEach((fn) => fn())\n  }\n}\n","import Subject from './subject'\n\nexport const allChanges = 'all_changes' + Math.random().toFixed(4)\n\ninterface Dict {\n  [k: string]: any\n}\n\ntype Key = string\n\nexport default class Stateful<S extends {} = Dict> extends Subject {\n  state: S\n  initialState: S\n  isFirstChange: boolean\n  hasChanged: Key[]\n\n  constructor(initialState: S = {} as S) {\n    super()\n\n    this.state = clone(initialState || ({} as S))\n    this.initialState = initialState\n    this.isFirstChange = true\n    this.hasChanged = []\n\n    this.setState = this.setState.bind(this)\n    this.changed = this.changed.bind(this)\n    this.listen = this.listen.bind(this)\n  }\n\n  setState(stateOrFn) {\n    // You can pass a function that returns state or a plain object\n    const prevState = clone(this.state)\n    const recievedState = typeof stateOrFn === 'function' ? stateOrFn(this.state) : stateOrFn\n\n    // Only get keys which have changed\n    const changedKeys = Object.keys(recievedState).filter(key => recievedState[key] !== prevState[key])\n\n    if (!changedKeys.length) return\n\n    // Merge this.state with the recievedState\n    const currentState = clone(this.state, recievedState)\n    this.state = currentState\n\n    const update = {\n      prevState,\n      currentState,\n      recievedState,\n      state: currentState,\n      self: this,\n      currentChanges: changedKeys,\n      changed: changedKeys,\n      isFirstChange: this.isFirstChange\n    }\n\n    // This emits changes for listeners that are listening without a key\n    // eg this.changed(() => { ...something changed }) || this.changed('myKey', () => { ...mykey changed })\n    this.emit(allChanges, update)\n\n    // Emit events for all the keys in changedKeys\n    for (const key of changedKeys) {\n      const changeForKey = clone(update, { isFirstChange: !this.hasChanged.includes(key) })\n      this.emit(key, changeForKey)\n    }\n\n    // No longer the first change\n    if (changedKeys.length && this.isFirstChange) {\n      this.isFirstChange = false\n    }\n\n    // Add changed keys to hasChanged\n    this.hasChanged = [...this.hasChanged, ...changedKeys.filter(x => !this.hasChanged.includes(x))]\n  }\n\n  changed(...args) {\n    // On is inherited from Subject\n    if (args.length === 2) {\n      return this.on(args[0], args[1])\n    } else {\n      return this.on(allChanges, args[0])\n    }\n  }\n\n  // Alias for this.changed(() => {})\n  listen(fn) {\n    return this.on(allChanges, fn)\n  }\n}\n\nfunction clone<T>(objs: T, ...rest: T[]) {\n  return Object.assign({}, objs, ...rest) as T\n}\n"]}