{"version":3,"sources":["reactive/observable.ts","../node_modules/parcel/src/builtins/bundle-url.js","../node_modules/parcel/src/builtins/bundle-loader.js","observers/create-resize-observable.ts"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError"],"mappings":"AEAA,ADAA,ICAIE,ADAAF,SAAS,GCAG,ADAA,GCAGY,CDAnB,MCA0B,CAAC,cAAD,CAAP,CAAwBV,YAA3C;;AAEA,ADDA,SCCSW,ADDAZ,eCCT,CAAyBa,EDDzB,GAA8B,ECC9B,EAAkC;AAChC,ADDA,MCCI,ADDA,CCCCC,ADDAf,KCCK,CAACgB,GDDX,EAAgB,ECCX,CAAcF,OAAd,CAAL,EAA6B;AAC3BA,ADDAd,ICCAc,ADDAd,OCCO,EDDE,CCCC,CAACc,CDDCZ,MCCF,CAAV,KDDwB,EAAxB;ACED,ADDA;;ACGD,ADDA,AEJF,MDKMe,EAAE,CDDCjB,ECCEc,OAAO,ADDhB,CCCiBA,OAAO,CAACI,MAAR,GAAiB,CAAlB,CAAhB;ADAD;ACEC,MAAI;AACF,ADDJ,SAAShB,ECCEiB,OAAO,CAACC,EDDnB,GAAwB,ECCb,CAAgBR,OAAO,CAACK,EAAD,CAAvB,CAAP;AACD,ADDD,GCDA,CAEE,OAAOb,GAAP,EAAY;AACZ,ADDF,MAAI,ECCEA,GAAG,CAACiB,IAAJ,KAAa,kBAAjB,EAAqC;AACnC,ADDF,AEAE,SAAU,CFAN,GCCG,CDDClB,GCCGmB,EDDP,EAAN,OCCS,CAAgB,ECDvB,GAAgC,KDCCF,OAAV,EAAmBG,MAAnB,EAA2B;AAChDC,ADDL,AEAD,GFFA,CAEE,EEAI,EDCAA,GDDGpB,GAAP,EAAY,AEAE,GDCC,ACDE,CDCDU,GCDK,IDCE,CAACW,KAAR,CAAc,CAAd,EAAiB,CAAC,CAAlB,CAAD,CAAX,CACGC,IADH,CACQ,QCFK,CACjB,GDCwB,aCDM;ADEtB,ADFR,AEA8B,QFA1BrB,AEAD,IAA2B,GFAnB,ECEIO,CDFD,CAAC,CEAZ,IDEmB,ADFFR,AEAU,CDEPa,EAAD,ADFC,CCEf,ADFgBX,KAAV,EAAiBC,KAAjB,CAAuB,+DAAvB,CAAd;ACGO,ACHuB,QAArB,CDAL,EAIGmB,ECJuB,EDA1B,CAIQN,KCJH,EDAL,EAIiBG,CCJS,KDA1B;AAKD,ADJH,AED8B,ODDrB,CAAP,ADEElB,AEDY,OFChB,CED8B,CFCjB,OEDG,QAAc;ADM7B,ADJC,aAAOG,UAAU,CAACH,OAAO,CAAC,CAAD,CAAR,CAAjB;AACD,AEFC;ADOF,ADJD,AEFG,QAAI,EDMAD,GAAN,OCNkB,GAAG,KAAnB;ADOH,ACNG,QAAI,OAAO,GAAG,KAAd;ADOL,ADJC,AEFI,QAAI,CFED,GAAP,EEFI;AFGL;ACKD,ACPM,QAAI,CDODoB,QCPU,GDOnB,CAAqBV,OAArB,EAA8B;AAC5B,ADJF,AEJmB,SDQVK,ADJAX,OCIO,CAACmB,EDJjB,CCIS,ADJWlB,CCICK,EDJrB,EAAyB,GCIG,CAACc,GAAR,CAAYC,UAAZ,CAAZ,CAAP,6BCRoB;ADSrB,ADJC,AELoB,SFKb,CAAC,KAAKpB,GAAN,EAAWC,OAAX,CAAmB,sEAAnB,EAA2F,IAA3F,IAAmG,GAA1G;AACD,AENqB;ADWtB,ACXsB,IDWlBoB,aAAa,GAAG,EAApB;ADHAnB,AERsB,OFQf,CAACT,YAAR,GAAuBD,kBAAvB;ACIA,ADHAU,AETsB,OFSf,CAACH,CCGCuB,SDHT,GAAqBvB,QCGrB,CAA8BwB,CDH9B,GCGA,EAAoCC,MAApC,EAA4C;AAC1CH,ACboB,EDapBA,aAAa,CAACE,IAAD,CAAb,GAAsBC,MAAtB,ACXQ,MAAM,CAAC,cAFK;ADcrB;ACdqB,IHHhB;AEmBNC,AChBsB,AHUpB,MEMI,CAACvB,OAAP,GAAiBA,KFNH,EEMU,GAAGE,CFNzB,EAA8C,YEMhD;AACAF,ACjBsB,AHU0B,OEOzC,CAACwB,IAAR,GAAeX,WAAf;AACAb,AClBsB,ODkBf,CAACyB,QAAR,GAAmBL,oBAAnB;AAEA,AFtBU,IEsBNjB,KFtBM,EEsBC,GAAG,AFtBJ,EEsBV,CFtB0B,CAAhB;AGEY,AHAZ,SAAA,UAAA,GAAsB,KAAtB;AEqBV,ACrBsB,AHCZ,SEoBDe,AFpBC,UEoBV,CAAoBQ,GClBH,CHFP,EEoBV,CFpB4B,CEoBA,AFpBlB,qCGEc,yBAAP,EAHK;ADsBpB,MAAIpB,EAAJ;ACtBoB,AHEZ,SAAA,qBAAA,GAAiC,YAAK,CAAG,CAAzC;AEqBR,ACvBoB,MDuBhBF,KAAK,CAACC,OAAN,CAAcqB,MAAd,CAAJ,EAA2B,eCpBuB,cAH9B;ADwBlBpB,AFrBM,IEqBNA,EAA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","file":"create-resize-observable.js","sourceRoot":"src","sourcesContent":["interface Observer<T> {\n  next: Listener<T>\n  complete?: Listener\n  error?: Listener<Error>\n}\ntype Listener<T = any> = (value: T) => any\ntype Cleanup = () => any\ninterface Dict<T> {\n  [key: string]: T\n}\nexport interface ListenerGroup {\n  next: Dict<Listener>\n  error: Dict<Listener>\n  complete: Dict<Listener>\n}\n\nclass Observable<T = any> {\n  private index: number = 0\n  private streamSource: (observer: Observable<T>) => Cleanup\n  private subscribed: boolean = false\n  private activeListeners = 0\n  private unsubscribeFromSource: Cleanup = () => {}\n  private listeners: ListenerGroup = {\n    next: {},\n    error: {},\n    complete: {}\n  }\n  private cancels: Dict<Cleanup> = {}\n\n  constructor(source: Observable['streamSource']) {\n    this.streamSource = source\n    this.next = this.next.bind(this)\n    this.complete = this.complete.bind(this)\n    this.error = this.error.bind(this)\n  }\n\n  private getKey() {\n    return 'k' + this.index++\n  }\n\n  emit(key: 'next' | 'error' | 'complete', val?: T | Error) {\n    for (const k in this.listeners[key]) {\n      this.listeners[key][k](val)\n    }\n  }\n\n  /* Emit the next value */\n  next(value: T) {\n    this.emit('next', value)\n  }\n\n  error(error: Error) {\n    this.emit('error', error)\n  }\n\n  /* Emit an end event to everything */\n  complete() {\n    this.emit('complete')\n    this.destroy()\n  }\n\n  destroy() {\n    for (const k in this.cancels) {\n      this.cancels[k]()\n    }\n  }\n\n  onDestroy (fn:Cleanup) {\n    const key = this.getKey()\n\n    this.cancels[key] = () => {\n      delete this.cancels[key]\n      fn()\n    }\n  }\n\n  /* \n  This is called when a observer unsubscribes\n  if it was the last remaining observer then it unsubscribes from the source\n  */\n  cleanup() {\n    if (!this.activeListeners) {\n      this.unsubscribeFromSource()\n    }\n  }\n\n  /*\n  Subscribe can be passed either a \n  Listener: (nextVal) => {} \n    or an\n  Observer: { next: nextVal => {}, error: err => {}, }\n  */\n  subscribe(fnOrObserver: Listener<T> | Observer<T>) {\n    if (!this.subscribed) {\n      this.unsubscribeFromSource = this.streamSource(this)\n      this.subscribed = true\n    }\n    const key = this.getKey()\n\n    if (isObserver(fnOrObserver)) {\n      const objKeys = Object.keys(fnOrObserver) as (keyof Observer<T>)[]\n      this.activeListeners += 1\n\n      objKeys.forEach(objKey => {\n        this.listeners[objKey][key] = fnOrObserver[objKey]\n      })\n\n      const cancel = () => {\n        this.activeListeners -= 1\n        objKeys.forEach(objKey => {\n          delete this.listeners[objKey][key]\n        })\n        delete this.cancels[key]\n        this.cleanup()\n      }\n\n      this.cancels[key] = cancel\n\n      return { unsubscribe: cancel, observer: fnOrObserver }\n    } else {\n      this.listeners.next[key] = fnOrObserver\n      this.activeListeners += 1\n\n      const cancel = () => {\n        this.activeListeners -= 1\n        delete this.listeners.next[key]\n        delete this.cancels[key]\n        this.cleanup()\n      }\n\n      this.cancels[key]\n\n      return { unsubscribe: cancel, observer: fnOrObserver }\n    }\n  }\n}\n\nfunction isObserver<T>(obj: any): obj is Observer<T> {\n  if (typeof obj === 'object' && obj.next) {\n    return true\n  }\n}\n\nfunction isListener<T>(fn: any): fn is Listener<T> {\n  if (typeof fn === 'function') {\n    return true\n  }\n}\n\n/* Same as regular observable except it always emits the last value */\nexport class BehaviourSubject<T = any> extends Observable<T> {\n  lastNext: T\n\n  next(value: T) {\n    this.emit('next', value)\n    this.lastNext = value\n  }\n\n  /* Very similar to observable except it sends the most recent value on subscribe */\n  subscribe(fnOrObserver: Listener<T> | Observer<T>) {\n    const observer = super.subscribe(fnOrObserver)\n    if (isObserver(observer.observer)) {\n      observer.observer.next(this.lastNext)\n    } else if (isListener(fnOrObserver)) {\n      fnOrObserver(this.lastNext)\n    }\n    return observer\n  }\n}\n\ninterface ChannelAPI<C> {\n  onSubscribe: (channel: C) => any\n  onUnsubscribe: (channel: C) => any\n  destroy: () => any\n}\n\nfunction isChannelAPI<C>(arg): arg is ChannelAPI<C> {\n  return Boolean(arg.destroy)\n}\n\nexport class ChannelledObservable<C = any, V = any> {\n  private index: number = 0\n  private streamSource: (observer: ChannelledObservable<C, V>) => Cleanup | ChannelAPI<C>\n  private subscribed: boolean = false\n  private activeListeners = 0\n  private unsubscribeFromSource: Cleanup | ChannelAPI<C> = () => {}\n  channels: Map<C, ListenerGroup> = new Map()\n  private cancels: Dict<Cleanup> = {}\n\n  constructor(source: ChannelledObservable['streamSource']) {\n    this.streamSource = source\n    this.next = this.next.bind(this)\n    this.complete = this.complete.bind(this)\n    this.error = this.error.bind(this)\n  }\n\n  private getKey() {\n    return 'k' + this.index++\n  }\n\n  emit(channel: C, key: 'next' | 'error' | 'complete', val?: V | Error) {\n    const c = this.channels.get(channel)\n    for (const k in c[key]) {\n      c[key][k](val)\n    }\n  }\n\n  next(channel: C, value: V) {\n    this.emit(channel, 'next', value)\n  }\n  error(channel: C, error: Error) {\n    this.emit(channel, 'error', error)\n  }\n  complete(channel: C) {\n    this.emit(channel, 'complete')\n  }\n\n  destroy() {\n    for (const k in this.cancels) {\n      this.cancels[k]()\n    }\n  }\n\n  onDestroy (fn:Cleanup) {\n    const key = this.getKey()\n\n    this.cancels[key] = () => {\n      delete this.cancels[key]\n      fn()\n    }\n  }\n\n  /* \n  This is called when a observer unsubscribes\n  if it was the last remaining observer then it unsubscribes from the source\n  */\n  cleanup(channel: C) {\n    if (isChannelAPI(this.unsubscribeFromSource)) this.unsubscribeFromSource.onUnsubscribe(channel)\n\n    if (!this.activeListeners) {\n      isChannelAPI(this.unsubscribeFromSource) ? this.unsubscribeFromSource.destroy() : this.unsubscribeFromSource()\n    }\n  }\n\n  /*\n  Subscribe can be passed either a \n  Listener: (nextVal) => {} \n    or an\n  Observer: { next: nextVal => {}, error: err => {}, }\n  */\n  subscribe(channelKey: C, fnOrObserver: Listener<V> | Observer<V>) {\n    if (!this.subscribed) {\n      this.unsubscribeFromSource = this.streamSource(this)\n      this.subscribed = true\n    }\n\n    let channel = this.channels.get(channelKey)\n    const key = this.getKey()\n\n    if (!channel) {\n      channel = { next: {}, error: {}, complete: {} }\n      this.channels.set(channelKey, channel)\n    }\n\n    if (isChannelAPI(this.unsubscribeFromSource)) {\n      this.unsubscribeFromSource.onSubscribe(channelKey)\n    }\n\n    /*  */\n    if (isObserver(fnOrObserver)) {\n      const objKeys = Object.keys(fnOrObserver) as (keyof Observer<V>)[]\n      this.activeListeners += 1\n\n      objKeys.forEach(objKey => {\n        channel[objKey][key] = fnOrObserver[objKey]\n      })\n\n      const cancel = () => {\n        this.activeListeners -= 1\n        const c = this.channels.get(channelKey)\n        objKeys.forEach(objKey => {\n          delete c[objKey][key]\n        })\n        delete this.cancels[key]\n        this.cleanup(channelKey)\n      }\n\n      this.cancels[key] = cancel\n\n      return { unsubscribe: cancel, observer: fnOrObserver }\n    }\n\n    if (isListener(fnOrObserver)) {\n      channel.next[key] = fnOrObserver\n      this.activeListeners += 1\n\n      const cancel = () => {\n        this.activeListeners -= 1\n        delete this.channels.get(channelKey).next[key]\n        delete this.cancels[key]\n        this.cleanup(channelKey)\n      }\n\n      this.cancels[key]\n\n      return { unsubscribe: cancel, observer: fnOrObserver }\n    }\n  }\n}\n\nexport default Observable\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","/* Intersection observer polyfill for IE */\r\nimport { ResizeObserver as Polyfill } from '@juggle/resize-observer'\r\nimport { ChannelledObservable } from '../reactive/observable'\r\n\r\ndeclare global {\r\n  interface Window {\r\n    ResizeObserver: typeof Polyfill\r\n  }\r\n}\r\n\r\ntype RO = import('@juggle/resize-observer').ResizeObserver\r\n\r\nexport function createResizeObservable() {\r\n  const observable = new ChannelledObservable<Element, RO>(\r\n    ({ next, error, complete }) => {\r\n      /* Entries is an array of entries for every element that changed */\r\n      let disconnected = false\r\n      let started = false\r\n      let source: Promise<RO> | RO\r\n      let getSource = async () => {\r\n        const ResizeObserver =\r\n          window.ResizeObserver ||\r\n          (await import('@juggle/resize-observer')).ResizeObserver\r\n        if (disconnected) return\r\n        started = true\r\n        return new ResizeObserver((entries) => {\r\n          entries.forEach((entry) => {\r\n            /* Get the callback for the specific element */\r\n            next(entry.target, entry)\r\n          })\r\n        })\r\n      }\r\n\r\n      source = getSource().then((r) => {\r\n        source = r\r\n        return r\r\n      })\r\n\r\n      return {\r\n        async onSubscribe(channel) {\r\n          let src = await source\r\n          src.observe(channel)\r\n        },\r\n        async onUnsubscribe(channel) {\r\n          let src = await source\r\n          src.unobserve(channel)\r\n        },\r\n        async destroy() {\r\n          disconnected = true\r\n          if (started) {\r\n            let src = await source\r\n            src.disconnect()\r\n          }\r\n        },\r\n      }\r\n    }\r\n  )\r\n\r\n  return observable\r\n}\r\n"]}